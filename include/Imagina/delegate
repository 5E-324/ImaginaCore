#pragma once

#include "declarations"
#include "evaluator"
#include "imagina.h"

namespace Imagina {
	class im_export LowPrecisionEvaluatorDelegate : public LowPrecisionEvaluator {
		struct Output {
			double Value;
		};
		ImCApi::IEvaluator *instance;
		ImCApi::pIEvaluator_Release release;
		ImCApi::pIEvaluator_GetOutputDescriptor getOutputDescriptor;
		ImCApi::pStandardEvaluator_SetEvaluationParameters setEvaluationParameters;
		ImCApi::pLowPrecisionEvaluator_Evaluate evaluate;

		PixelDataDescriptor *outputDescriptor = nullptr;
	public:
		LowPrecisionEvaluatorDelegate(
			ImCApi::IEvaluator *instance,
			ImCApi::pIEvaluator_Release release,
			ImCApi::pIEvaluator_GetOutputDescriptor getOutputDescriptor,
			ImCApi::pStandardEvaluator_SetEvaluationParameters setEvaluationParameters,
			ImCApi::pLowPrecisionEvaluator_Evaluate evaluate
		) : instance(instance), release(release), getOutputDescriptor(getOutputDescriptor), setEvaluationParameters(setEvaluationParameters), evaluate(evaluate) {}

		virtual ~LowPrecisionEvaluatorDelegate() override;

		virtual const PixelDataDescriptor *GetOutputDescriptor() override;

		virtual void SetEvaluationParameters(const StandardEvaluationParameters &parameters) override;

		virtual void Evaluate(IRasterizingInterface &rasterizingInterface) override;
	};

	class im_export SimpleEvaluatorDelegate : public SimpleEvaluator {
		ImCApi::IEvaluator *instance;
		ImCApi::pIEvaluator_Release release;
		ImCApi::pIEvaluator_GetOutputDescriptor getOutputDescriptor;
		ImCApi::pStandardEvaluator_SetEvaluationParameters setEvaluationParameters;
		ImCApi::pSimpleEvaluator_SetReferenceLocationAndPrecompute setReferenceLocationAndPrecompute;
		ImCApi::pSimpleEvaluator_Evaluate evaluate;

		PixelDataDescriptor *outputDescriptor = nullptr;

	public:
		SimpleEvaluatorDelegate(
			ImCApi::IEvaluator *instance,
			ImCApi::pIEvaluator_Release release,
			ImCApi::pIEvaluator_GetOutputDescriptor getOutputDescriptor,
			ImCApi::pStandardEvaluator_SetEvaluationParameters setEvaluationParameters,
			ImCApi::pSimpleEvaluator_SetReferenceLocationAndPrecompute setReferenceLocationAndPrecompute,
			ImCApi::pLowPrecisionEvaluator_Evaluate evaluate
		) : instance(instance), release(release), getOutputDescriptor(getOutputDescriptor), setEvaluationParameters(setEvaluationParameters), setReferenceLocationAndPrecompute(setReferenceLocationAndPrecompute), evaluate(evaluate) {}

		virtual ~SimpleEvaluatorDelegate() override;

		virtual const PixelDataDescriptor *GetOutputDescriptor() override;

		virtual void SetEvaluationParameters(const StandardEvaluationParameters &parameters) override;

		virtual void Precompute() override;
		virtual void Evaluate(IRasterizingInterface &rasterizingInterface) override;
	};
}